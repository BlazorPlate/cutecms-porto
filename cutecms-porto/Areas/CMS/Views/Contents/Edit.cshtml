@model cutecms_porto.Areas.CMS.Models.DBModel.Content
@using cutecms_porto.Helpers
@{
    ViewBag.MainTitle = Resources.Resources.Content;
    ViewBag.Title = Resources.Resources.Edit;
}
@using (Html.BeginForm("Edit", "Contents", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.LanguageId)
        @Html.HiddenFor(model => model.UrlCode)
        @Html.HiddenFor(model => model.TranslationId)
        @Html.HiddenFor(model => model.CreatedOn)
        <div class="form-group">
            @Html.LabelFor(model => model.LanguageId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Language", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContentTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContentTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContentTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MainContent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MainContent, new { @class = "mceEditor" })
                @Html.ValidationMessageFor(model => model.MainContent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MetaDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MetaDescription)
                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HasMenuItem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.HasMenuItem)
                {
                    @Html.CheckBoxFor(model => model.HasMenuItem, new { @class = "js-switch", @checked = "checked" })
                }
                else
                {
                    @Html.CheckBoxFor(model => model.HasMenuItem, new { @class = "js-switch" })
                }
            </div>
        </div>
        <div class="form-group" id="ParentMenuItemDiv">
            @Html.LabelFor(model => model.ParentMenuItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentMenuItemId", null, Resources.Resources.NoParentItem, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HasShortcut, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.HasShortcut, new { @class = "js-switch" })
            </div>
        </div>
        <div id="ShortcutDiv">
            <div class="form-group">
                @Html.LabelFor(model => model.ShortcutTitle, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShortcutTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortcutTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CssClass, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CssClass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CssClass, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Ordinal, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ordinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ordinal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="IsUrgentDiv" class="form-group">
            @Html.LabelFor(model => model.IsUrgent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsUrgent, new { @class = "js-switch" })
            </div>
        </div>
        <div id="UrgentExpiredOnDiv" class="form-group">
            @Html.LabelFor(model => model.UrgentExpiredOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UrgentExpiredOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UrgentExpiredOn, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RoleVID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoleVID", null, Resources.Resources.ChooseRole, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleVID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="StartDateDiv" class="form-group">
            @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="EndDateDiv" class="form-group">
            @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="StatusDiv">
            @Html.LabelFor(model => model.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="PublishedOnDiv">
            @Html.LabelFor(model => model.PublishedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishedOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishedOn, "", new { @class = "text-danger" })
                @Html.ValidationMessage("InvalidPublishDate", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="ExpiredOnDiv">
            @Html.LabelFor(model => model.ExpiredOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiredOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiredOn, "", new { @class = "text-danger" })
                @Html.ValidationMessage("InvalidExpiryDate", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Author, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("Author", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.Author)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("ModifiedBy", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.ModifiedBy)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CreatedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CreatedOn, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ModifiedOn, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.ModifiedOn)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishedOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PublishedOn, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.PublishedOn)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpiredOn, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExpiredOn, null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.ExpiredOn)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resources.Save class="btn btn-primary" />
                @if (!Model.IsTranslated)
                {
                    @Html.ActionLink(Resources.Resources.AddTranslation, "Create", new { id = Model.TranslationId }, new { @class = "btn btn-info" })
                }
                else
                {
                    @Html.ActionLink(Resources.Resources.ViewTranslation, "Edit", new { id = Model.Id, translationId = Model.TranslationId, lang = Model.Language.CultureName }, new { @class = "btn btn-info" })
                }
                @Html.ActionLink(Resources.Resources.ManageLists, "Index", "ContentLists", new { id = Model.Id }, new { @class = "btn btn-info" })
                @Html.ActionLink(Resources.Resources.Galleries, "Index", "ContentGalleries", new { id = Model.Id }, new { @class = "btn btn-info" })
                @Html.ActionLink(Resources.Resources.Delete, "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink(Resources.Resources.BackToList, "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#PublishedOn').removeAttr("data-val-date");
        $('#ExpiredOn').removeAttr("data-val-date");
        $('#CreatedOn').removeAttr("data-val-date");
        $('#ModifiedOn').removeAttr("data-val-date");
        $('#StartDate').removeAttr("data-val-date");
        $('#EndDate').removeAttr("data-val-date");
        $('#UrgentExpiredOn').removeAttr("data-val-date");
    </script>
    @if (CultureHelper.IsRighToLeft())
    {
        <script type="text/javascript">
            $('#StartDate').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true,
                format: "DD/MM/YYYY LT",
                widgetPositioning: {
                    horizontal: 'right'
                }
            });
            $('#EndDate').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: false,
                format: "DD/MM/YYYY LT",
                widgetPositioning: {
                    horizontal: 'right'
                }
            });
            $('#PublishedOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true,
                format: "DD/MM/YYYY LT",
                widgetPositioning: {
                    horizontal: 'right'
                }
            });
            $('#ExpiredOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: false,
                format: "DD/MM/YYYY LT",
                widgetPositioning: {
                    horizontal: 'right'
                }
            });
            $('#UrgentExpiredOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true,
                format: "DD/MM/YYYY LT",
                widgetPositioning: {
                    horizontal: 'right'
                }
            });
        </script>
    }
    else
    {
        <script type="text/javascript">
            $('#StartDate').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true
            });
            $('#EndDate').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: false
            });
            $('#PublishedOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true
            });
            $('#ExpiredOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: false
            });
            $('#UrgentExpiredOn').datetimepicker({
                showClose: true,
                showClear: true,
                showTodayButton: true,
                useCurrent: true,
            });
        </script>
    }
    <script type="text/javascript">
        $("#StartDate").on("dp.change", function (e) {
            $('#EndDate').data("DateTimePicker").minDate(e.date);
        });
        $("#EndDate").on("dp.change", function (e) {
            $('#StartDate').data("DateTimePicker").maxDate(e.date);
        });
        $("#PublishedOn").on("dp.change", function (e) {
            $('#ExpiredOn').data("DateTimePicker").minDate(e.date);
        });
        $("#ExpiredOn").on("dp.change", function (e) {
            $('#PublishedOn').data("DateTimePicker").maxDate(e.date);
        });
    </script>
    <script type="text/javascript">
        $("#ExpiredOnDiv").hide();
        $("#PublishedOnDiv").hide();
        var selectedValue = $("#StatusId").val();
        if (selectedValue == 1) {
            $("#ExpiredOnDiv").fadeIn();
        }
        if (selectedValue == 3) {
            $("#PublishedOnDiv").fadeIn();
            $("#ExpiredOnDiv").fadeIn();
        }
        $(function () {
            $("#StatusId").change(function () {
                var selectedText = $(this).find("option:selected").text();
                var selectedValue = $(this).val();
                if (selectedValue == 1) {
                    $("#PublishedOnDiv").fadeOut();
                    $("#ExpiredOnDiv").fadeIn();
                    $("#IsUrgentDiv").fadeIn();
                    $("#PublishedOn").val(null);
                    $("#ExpiredOn").val(null);
                }
                if (selectedValue == 2) {
                    $("#ExpiredOnDiv").fadeOut();
                    $("#PublishedOnDiv").fadeOut();
                    $("#PublishedOn").val(null);
                    $("#ExpiredOn").val(null);
                    $('#IsUrgent').removeAttr('checked');
                    $("#IsUrgentDiv").fadeOut();
                }
                if (selectedValue == 3) {
                    $("#ExpiredOnDiv").fadeIn();
                    $("#PublishedOnDiv").fadeIn();
                    $("#IsUrgentDiv").fadeIn();
                    $("#PublishedOn").val(null);
                    $("#ExpiredOn").val(null);
                }
            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Initially, Hide the ParentMenuItemDiv  when Web Form is loaded
            $('#ParentMenuItemDiv').hide();
            if ($('#HasMenuItem').prop('checked')) {
                $('#ParentMenuItemDiv').show();
            }
            else {
                $("#ParentMenuItemId").val('0');
            }
            $('#HasMenuItem').change(function () {
                if (this.checked) {
                    $('#ParentMenuItemDiv').show();
                }
                else {
                    $("#ParentMenuItemId").val('0');
                    $('#ParentMenuItemDiv').hide();
                }
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#IsUrgent').change(function () {
                if (this.checked) {
                    $('#UrgentExpiredOnDiv').show();
                }
                else {
                    $("#UrgentExpiredOnDiv").hide()
                    $("#UrgentExpiredOn").val(null);
                }
            });
            if ($('#IsUrgent').not(':checked')) {
                $("#UrgentExpiredOnDiv").hide();
            }
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            //Uncheck the CheckBox initially
            $('#HasShortcut').change(function () {
                if (this.checked) {
                    $('#ShortcutDiv').show();
                }
                else {
                    $("#ShortcutDiv").hide()
                    $("#Ordinal").val(null);
                    $("#ShortcutTitle").val(null);
                    $("#CssClass").val(null);
                }
            });
            if ($('#HasShortcut').not(':checked')) {
                $("#ShortcutDiv").hide();
            }
        });
    </script>
}