@model cutecms_porto.Areas.CMS.Models.DBModel.MenuItem
@{
    ViewBag.MainTitle = Resources.Resources.MenuItem;
    ViewBag.Title = Resources.Resources.Create;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.MenuId)
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.MenuId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("MenuCode", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LanguageId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LanguageId", null, Resources.Resources.ChooseLanguage, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentId", null, Resources.Resources.ChooseParentMenuItem, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CssClass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CssClass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CssClass, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ordinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ordinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ordinal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Visible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Visible, new { @class = "js-switch" })
                @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsParent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsParent, new { @class = "js-switch"})
                @Html.ValidationMessageFor(model => model.IsParent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="UrlDiv">
            @Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Path, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@Resources.Resources.Create class="btn btn-primary" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink(Resources.Resources.BackToList, "Index", new { id = Model.MenuId })
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#LanguageId").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMenuItemsClientSide")', // we are calling json method
                dataType: 'json',
                data: { languageId: $("#LanguageId").val(), id: $("#MenuId").val() },
                success: function (MenuItems) {
                    // MenuItems contains the JSON formatted list
                    // of MenuItems passed from the controller
                    $("#ParentId").empty();
                    $.each(MenuItems, function (i, MenuItem) {
                        $("#ParentId").append('<option value="' + MenuItem.Value + '">' + MenuItem.Text + '</option>');
                    }); // here we are adding option for MenuItems
                },
                error: function (ex) {
                    $("#ParentId").empty();
                    //alert('Failed to retrieve MenuItems.' + ex);
                }
            });
            return false;
        })
    });
    </script>
}