@model cutecms_porto.Areas.RMS.Models.DBModel.Vacancy
@using System.Threading
@{
    ViewBag.MainTitle = Resources.Resources.Vacancy;
    ViewBag.Title = Resources.Resources.Details;
}
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.LanguageId)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Language.Name)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Code)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Code)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Title)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Title)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Available)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.Available)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Description)
    </dt>
    <dd>
        @Html.Raw(HttpUtility.HtmlDecode(Model.Description))
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Requirements)
    </dt>
    <dd>
        @Html.Raw(HttpUtility.HtmlDecode(Model.Requirements))
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Skills)
    </dt>
    <dd>
        @Html.Raw(HttpUtility.HtmlDecode(Model.Skills))
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Documents)
    </dt>
    <dd>
        @Html.Raw(HttpUtility.HtmlDecode(Model.Documents))
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.JobTypeId)
    </dt>
    <dd>
        @{ var jobType = Model.JobType.JobTypeTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && p.JobTypeId == Model.JobTypeId).FirstOrDefault()?.Value ?? Model.JobType.Code;}
        @jobType
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.ProgramId)
    </dt>
    <dd>
        @{ var program = Model.Program.ProgramTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && p.ProgramId == Model.ProgramId).FirstOrDefault()?.Value ?? Model.Program.Code;}
        @program
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.StatusId)
    </dt>
    <dd>
        @{ var status = Model.Status.StatusTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && p.StatusId == Model.StatusId).FirstOrDefault()?.Value ?? Model.Status.Code;}
        @status
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.Author)
    </dt>
    <dd>
        @Html.Display("Author")
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.ModifiedBy)
    </dt>
    <dd>
        @Html.Display("ModifiedBy")
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.CreatedOn)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.CreatedOn)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.PublishedOn)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.PublishedOn)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.ExpiredOn)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.ExpiredOn)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.ModifiedOn)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.ModifiedOn)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.IsTranslated)
    </dt>
    <dd>
        @Html.DisplayFor(model => model.IsTranslated)
    </dd>
</dl>
<p>
    @Html.ActionLink(Resources.Resources.Edit, "Edit", new { id = Model.Id }) |
    @Html.ActionLink(Resources.Resources.BackToList, "Index")
</p>