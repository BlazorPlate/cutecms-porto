@model cutecms_porto.Areas.RMS.Models.DBModel.Submission
@using System.Threading
@{
    ViewBag.Title = Resources.Resources.Apply;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </section>
}
<section>
    <div class="container">
        @using (Html.BeginForm("Apply", "Careers", FormMethod.Post, new { id = "apply", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.VacancyId)
            <h3 class="heading-primary">@ViewBag.VacancyTitle</h3>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.FirstName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.MiddleName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.LastName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.GenderId, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Applicant.GenderId, new SelectList(TermsHelper.Genders(), "GenderId", "Value"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Applicant.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.DOB, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.DOB, new { htmlAttributes = new { @id = "date1", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.Mobile, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Applicant.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Applicant.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CoverLetter, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.CoverLetter, new { @class = "mceEditor", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CoverLetter, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Applicant.File, new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:auto">
                        @Html.TextBoxFor(model => model.Applicant.File, new { @class = "form-control", type = "file", multiple = "false", placeholder = "upload files" })
                        <div class="text-muted block small">@Resources.Resources.CVNotes</div>
                        @Html.ValidationMessageFor(model => model.Applicant.File, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label(@Resources.Resources.Attachments, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width:auto">
                        <div>
                            @Html.Raw(FileUpload.GetHtml(
            name: "attachmentFiles",
            initialNumberOfFiles: 1,
            allowMoreFilesToBeAdded: true,
            includeFormTag: false,
            addText: @Resources.Resources.AddAttachments,
            uploadText: "").ToString().Replace("<input value\"\" type=\"submit\" />", ""))
                        </div>
                        <div class="text-muted block small">@Resources.Resources.AttachmentsNotes</div>
                        @Html.ValidationMessageFor(model => model.Applicant.AttachmentFiles, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="submitBtn" type="submit" value="@Resources.Resources.Submit" class="btn btn-primary mb-xl" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div>
                @Html.ActionLink(Resources.Resources.BackToList, "Index", "Vacancies")
            </div>
        }
        <div class="post-block post-share">
            <h3 class="heading-primary"><i class="fa fa-share"></i>@Resources.Resources.Share</h3>
            <!-- AddThis Button BEGIN -->
            <div class="addthis_toolbox addthis_default_style ">
                <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
                <a class="addthis_button_tweet"></a>
                <a class="addthis_button_pinterest_pinit"></a>
                <a class="addthis_counter addthis_pill_style"></a>
            </div>
            <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=xa-50faf75173aadc53"></script>
            <!-- AddThis Button END -->
        </div>
    </div>
</section>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).on('invalid-form.validate', 'form', function () {
            var button = $(this).find('input[type="submit"]');
            setTimeout(function () {
                button.removeAttr('disabled');
            }, 1);
        });
        $(document).on('submit', 'form', function () {
            var button = $(this).find('input[type="submit"]');
            setTimeout(function () {
                button.attr('disabled', 'disabled');
            }, 0);
        });
    </script>
}
