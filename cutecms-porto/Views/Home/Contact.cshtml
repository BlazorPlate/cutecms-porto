@model OrganizationViewModel
@using System.Threading;
@using System.Data.Entity.Core.Objects;
@using cutecms_porto.Areas.Identity.Models.DBModel;
@using cutecms_porto.Models
@using cutecms_porto.Areas.Config.Models.DBModel;
@{
    ViewBag.Title = Resources.Resources.ContactUs;
    IdentityEntities identityDb = new IdentityEntities();
    ConfigEntities configDb = new ConfigEntities();
    var organizations = (List<Organization>)HttpRuntime.Cache["Organizations"];
    var organization = organizations.Where(o => o.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name))?.FirstOrDefault() ?? new Organization();

}
@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </section>
    <div id="map" class="google-map"></div>
}
<!-- Google Maps - Go to the bottom of the page to change settings and map location. -->

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h2 class="mb-sm mt-sm"><strong>@Resources.Resources.ContactUs</strong></h2>
            @using (Html.BeginForm("Contact", "Home", FormMethod.Post))
            {
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.SenderName)
                            @Html.TextBoxFor(model => model.SenderName, "", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, "", new { @class = "form-control", @maxlength = "100", placeholder = "example@mail.com" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Phone)
                            @Html.TextBoxFor(model => model.Phone, "", new { @class = "form-control", @maxlength = "100" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Subject)
                            @Html.TextBoxFor(model => model.Subject, "", new { @class = "form-control", @maxlength = "100" })  @**@
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Message)
                            @Html.TextAreaFor(model => model.Message, new { @class = "form-control", @maxlength = "100", @rows = 14 })
                            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <input type="submit" value="@Resources.Resources.Send" class="btn btn-primary btn-lg mb-xlg" data-loading-text="Loading...">
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <h4 class="heading-primary mt-lg"><strong>@Resources.Resources.GetInTouch</strong></h4>
            @*<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur eget leo at velit imperdiet varius. In eu ipsum vitae velit congue iaculis vitae at risus. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>*@<p></p><p></p><p></p><p></p>
            <hr>
            @if (Model.Organization != null)
            {
                <h4 class="heading-primary">@Model.Organization.Name</h4>
                <ul class="list list-icons list-icons-style-3 mb-xlg">
                    <li><i class="fa fa-map-marker"></i> @Model.Organization.AddressLine1<br />@Model.Organization.City, @Model.Organization.State, @Model.Organization.ZIP, @Model.Organization.Country</li>
                    <li><i class="fa fa-phone"></i><span> @(Model.Organization.Telephone ?? Resources.Resources.NotAvailable)</span></li>
                    <li><i class="fa fa-fax"></i><span> @(Model.Organization.Fax ?? Resources.Resources.NotAvailable)</span></li>
                    <li><i class="fa fa-envelope"></i> <a href="mailto:@Model.Organization.Email">@(Model.Organization.Email ?? Resources.Resources.NotAvailable)</a></li>
                </ul>
            }
            @{
                configDb.Configuration.LazyLoadingEnabled = true;
                var query = (from p in configDb.ConfigDepartments
                             join c in configDb.Contacts on p.Id equals c.DepartmentId
                             where p.TenantId.Equals(Tenant.TenantId) && p.Contacts.Where(c => c.Organization.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).Any() && p.Contacts.Where(c => c.Organization.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && c.Organization.IsDefault && c.Organization.TenantId.Equals(Tenant.TenantId)).Any()
                             select p).Distinct().OrderBy(p => p.Ordinal);
            }
            @foreach (var item in query)
            {
                <h4 class="heading-primary">@(item.DepartmentTerms.Where(d => d.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && d.DepartmentId == item.Id).FirstOrDefault()?.Value ?? item.Code)</h4>
                foreach (var contact in item.Contacts.Where(c => c.Organization.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).OrderBy(c => c.Ordinal))
                {
                    <ul class="list list-icons list-icons-style-3 mb-xlg">
                        <li><i class="fa fa-user"></i><span> @string.Format(contact.PersonalTitle.PersonalTitleTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && p.PersonalTitleId == contact.PersonalTitleId).FirstOrDefault().Value + " " + "{0}", @contact.Name), @contact.Position</span></li>
                        @foreach (var phoneNumber in contact.PhoneNumbers)
                        {
                            <li><i class="fa fa-phone"></i><span>@(phoneNumber.Number ?? Resources.Resources.NotAvailable), @Resources.Resources.Extension: @(phoneNumber.Extension ?? Resources.Resources.NotAvailable)</span></li>
                        }
                        <li><i class="fa fa-map-marker"></i><span>@contact.Office</span></li>
                        <li><i class="fa fa-envelope"></i> <a href="mailto:@(contact.Email)">@(contact.Email ?? Resources.Resources.NotAvailable)</a></li>
                    </ul>
                }
            }
            @{configDb.Configuration.LazyLoadingEnabled = false; }
        </div>

    </div>
    <div class="post-block post-share">
        <h3 class="heading-primary"><i class="fa fa-share"></i>@Resources.Resources.Share</h3>
        <!-- AddThis Button BEGIN -->
        <div class="addthis_toolbox addthis_default_style ">
            <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
            <a class="addthis_button_tweet"></a>
            <a class="addthis_button_pinterest_pinit"></a>
            <a class="addthis_counter addthis_pill_style"></a>
        </div>
        <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=xa-50faf75173aadc53"></script>
        <!-- AddThis Button END -->
    </div>
</div>
@section Scripts{
<script>
        function initMap() {
            var uluru = { lat: @(organization?.Latitude), lng: @(organization?.Longitude) };
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 16,
                center: uluru
            });
            var marker = new google.maps.Marker({
                position: uluru,
                map: map
            });
        }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyALCBCAAWZyjYD909SSc3dCc6Z9NtEPz5E&callback=initMap">
</script>
}