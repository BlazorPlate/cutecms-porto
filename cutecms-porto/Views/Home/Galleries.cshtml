@model IEnumerable<cutecms_porto.Areas.CMS.Models.DBModel.Gallery>
@using PagedList.Mvc;
@using PagedList;
@using System.Threading;
@using cutecms_porto.Areas.CMS.Models.DBModel
@{
    List<string> categoryList = new List<string>();
    ViewBag.Title = @Resources.Resources.PhotoGallery;
    CMSEntities cmsDb = new CMSEntities();
}
@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </section>
}
<section>
    <div class="row">
        <div class="col-md-12">
            <h4>Default</h4>
            <ul class="nav nav-pills sort-source" data-sort-id="portfolio" data-option-key="filter">
                <li data-option-value="*" class="active"><a href="#">Show All</a></li>
                @foreach (var item in Model)
                {
                    var galleryCategories = item.GalleryCategories.Select(g => g.Category.Code).ToList();
                    foreach (var galleryCategory in galleryCategories)
                    {
                        categoryList.Add(galleryCategory);
                    }
                }
                @{ var uniqueItems = new HashSet<string>(categoryList);}
                @foreach (var category in uniqueItems)
                {
                    string categoryName = cmsDb.CategoryTerms.Where(c => c.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && c.Category.Code.Equals(category)).FirstOrDefault()?.Value;
                    <li data-option-value=".@category"><a href="#">@(categoryName ?? category)</a></li>
                }
            </ul>
            <hr>

            <div class="row">

                <div class="sort-destination-loader sort-destination-loader-showing">
                    <ul class="image-gallery sort-destination lightbox" data-sort-id="portfolio" data-plugin-options='{"delegate": "a.lightbox-portfolio", "type": "image", "gallery": {"enabled": true}}'>

                        @foreach (var item in Model)
                        {
                            string categoryFilters = string.Join(" ", item.GalleryCategories.Select(g => g.Category.Code).ToList());
                            <li class="col-md-3 col-sm-6 col-xs-12 isotope-item @categoryFilters">
                                <div class="image-gallery-item">
                                    <a href="@Url.Action("ImageFiles","Home", new { id = item.Id, area = "" })">
                                        <span class="thumb-info">
                                            <span class="thumb-info-wrapper">
                                                <img src="@item.ImageFiles.OrderBy(i=>i.Ordinal).FirstOrDefault().ThumbPath" class="img-responsive" alt="">
                                                <span class="thumb-info-title">
                                                    @{
                                                        string gallery = item.GalleryTerms.Where(g => g.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && g.GalleryId == item.Id).FirstOrDefault()?.Value ?? item.Code;
                                                        string galleryDescription = item.GalleryTerms.Where(g => g.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name) && g.GalleryId == item.Id).FirstOrDefault()?.Description;
                                                    }
                                                    <span class="thumb-info-inner">@galleryDescription</span>
                                                    <span class="thumb-info-type">@gallery</span>
                                                </span>
                                                <span class="thumb-info-action">
                                                    <span class="thumb-info-action-icon"><i class="fa fa-link"></i></span>
                                                </span>
                                            </span>
                                        </span>
                                    </a>
                                </div>
                            </li>
                                                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Galleries", new { page }))
