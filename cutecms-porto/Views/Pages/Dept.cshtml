@model cutecms_porto.Areas.Identity.Models.DBModel.IdentityDepartmentTerm
@using System.Threading
@using cutecms_porto.Areas.Identity.Models
@using cutecms_porto.Areas.Identity.Models.DBModel
@{
    ApplicationDbContext _db = new ApplicationDbContext();
    IdentityEntities db = new IdentityEntities();
    ViewBag.Title = Model.Value;
    ViewBag.ParentDepts = BreadcrumbsHelper.GetParentDepartmentItems(Model.Department, Thread.CurrentThread.CurrentCulture.Name);
    bool activeFlag = true;

}

@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <ul class="breadcrumb">
                        <li><a href="~/@Thread.CurrentThread.CurrentCulture.Name">@Resources.Resources.Home</a></li>
                        @Html.Partial("_DeptBreadcrumb")
                    </ul>
                    <br />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <h1><a style="color:white;text-decoration:none" href="@Url.Action("Content", "Pages" , new { slug=Model.UrlSlug })">@Model.Value</a></h1>
                </div>
            </div>
        </div>
    </section>
}
<div class="container">
    <div class="row mt-lg mb-lg pb-xl">
        <div class="col-md-3">
            <aside class="sidebar">
                <h4 class="font-weight-semibold mb-lg">@Resources.Resources.MainDepts</h4>
                <ul class="nav nav-list narrow mb-xlg">
                    @foreach (var item in db.IdentityDepartmentTerms.Where(d => d.Department.TenantId.Trim().Equals(Tenant.TenantId) && d.Department.Departments1.Count > 0 && d.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).Where(d => d.Visible).OrderBy(d => d.DepartmentId).ThenBy(d => d.Ordinal))
                    {
                        <li><a href="@string.Concat(item.AbsolutePath, string.Concat("#", item.Department.Code))">@item.Value</a></li>
                    }
                </ul>
            </aside>
        </div>
        <div class="col-md-9">
            <div class="feature-box feature-box-style-2 mb-lg">
                <div class="feature-box-icon">
                    <img src="@Model.IconPath" alt="@Model.IconName" class="img-responsive" />
                </div>
                <div class="feature-box-info ml-md">
                    <h2 class="font-weight-semibold mb-md">@Model.Value</h2>
                    <p class="lead font-weight-normal">@Model.Summary</p>

                    <img src="@Model.ImagePath" style="max-width: 260px;" alt="@Model.ImageName" class="pull-right ml-xl mb-xl img-responsive box-shadow-custom" />

                    <p>@Html.Raw(HttpUtility.HtmlDecode(Model.Description)) </p>
                </div>

            </div>
            @if (User.IsInRole("Admin"))
            {
                <input type="button" class="btn btn-primary mr-xs mb-sm" title="@Resources.Resources.Edit" value="@Resources.Resources.Edit" onclick="location.href='@Url.Action("Edit", "IdentityDepartmentTerms", new { area = "Identity",id = Model.Id })'" />
            }
            <input type="button" class="btn btn-default mr-xs mb-sm" title="@Resources.Resources.Back" value="@Resources.Resources.Back" onclick="location.href='@Url.Action("Index", "Home", new { area = ""})'" />
            <section class="team">
                <div class="row mt-lg mb-lg">
                    <div class="col-md-12">
                        <h2 class="font-weight-semibold mb-xs">@Resources.Resources.MeetOurTeam</h2>
                        @*<p class="lead font-weight-normal">At Porto Medical, we offer a wide array of departments, gravida nibh vel velit auctor aliquet. Aenean sollicitudin, lorem quis bibendum auctor.</p>*@
                        <ul class="nav nav-pills sort-source" data-sort-id="portfolio" data-option-key="filter" data-plugin-options="{'layoutMode': 'fitRows', 'filter': '*'}">
                            @*<li data-option-value="*" class="active"><a href="#">@Resources.Resources.ShowAll</a></li>*@
                            @foreach (var item in TreeHelper.Traversal(Model.Department, x => x.Departments1).OrderBy(d => d.Ordinal))
                            {
                                if (activeFlag)
                                {
                                    <li id="default" class="active" data-option-value=".@item.Code"><a href="#">@item.DepartmentTerms.Where(d => d.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault().Value</a></li>
                                    activeFlag = false;
                                }
                                else
                                {
                                    <li data-option-value=".@item.Code"><a href="#">@item.DepartmentTerms.Where(d => d.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault().Value</a></li>

                                }
                            }
                        </ul>
                        <hr class="solid">
                        <div class="row">
                            <div class="sort-destination-loader sort-destination-loader-showing">
                                <ul class="portfolio-list sort-destination" data-sort-id="portfolio">
                                    @foreach (var item in TreeHelper.Traversal(Model.Department, x => x.Departments1))
                                    {
                                        var deptList = TreeHelper.Traversal(item, x => x.Departments1);
                                        deptList.OrderBy(d => d.Ordinal);
                                        foreach (var subDept in deptList)
                                        {
                                            foreach (var empInDept in subDept.EmpInDepts.OrderBy(e => e.Ordinal))
                                            {
                                                string personalTitle = empInDept.Employee.PersonalTitle.PersonalTitleTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? empInDept.Employee.PersonalTitle.Code;
                                                var employee = db.Employees.Where(e => e.Language.CultureName.Equals(Thread.CurrentThread.CurrentCulture.Name) && e.TranslationId == empInDept.Employee.TranslationId).FirstOrDefault();
                                                <li class="col-md-3 col-sm-6 col-xs-12 isotope-item @item.Code">
                                                    <div class="portfolio-item">
                                                        <a href="@Url.Action("MemberProfile", "Staff", new { id = empInDept.Employee.TranslationId })" data-ajax-on-page class="text-decoration-none">
                                                            <span class="thumb-info thumb-info-no-zoom thumb-info-hide-wrapper-bg">
                                                                <span class="thumb-info-wrapper m-none">
                                                                    <img alt="@empInDept.Employee.PersonalPhotoName" src="@(!File.Exists(Server.MapPath(employee.PersonalPhotoPath)) ? "/assets/admin/plugins/images/users/user-icon.png" : @employee.PersonalPhotoPath)">
                                                                </span>
                                                                <span class="thumb-info-caption p-md pt-xlg pb-xlg">
                                                                    <span class="custom-thumb-info-title">
                                                                        <span class="custom-thumb-info-type font-weight-light text-md">@empInDept.Department.DepartmentTerms.Where(d => d.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault().Value</span>
                                                                        <span class="custom-thumb-info-inner font-weight-semibold text-lg">@personalTitle @employee.FullName</span>
                                                                        @{string occupation = (empInDept.Occupation.OccupationTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault() != null) ? empInDept.Occupation.OccupationTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault().Value : empInDept.Occupation.Code;}
                                                                        <span class="custom-thumb-info-type font-weight-light text-sm">@occupation</span>

                                                                    </span>
                                                                </span>
                                                            </span>
                                                        </a>
                                                    </div>
                                                </li>
                                            }
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>
