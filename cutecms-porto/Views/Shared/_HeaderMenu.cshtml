@using cutecms_porto.Areas.CMS.Models.DBModel
@using System.Globalization
@using System.Threading
@{
    int count = 0;
    CMSEntities db = new CMSEntities();
    IEnumerable<MenuItem> menuItems = db.MenuItems.Include("Status").Include("Menu").Include("Language").Where(m => m.Menu.TenantId.Trim().Equals(Tenant.TenantId) && m.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name));
    count = menuItems.Count();
}

<div class="header-container container">
    <div class="header-row">
        <div class="header-column">
            <div class="header-logo">
                <a href="~/@Thread.CurrentThread.CurrentCulture.Name">
                    @*<img alt="@(OrganizationData.Organization?.PrimaryLogoName)" width="100" height="100" data-sticky-width="80" data-sticky-height="80" data-sticky-top="40" src="@(OrganizationData.Organization?.PrimaryLogoPath)">*@
                    <img alt="Porto" width="111" height="54" data-sticky-width="82" data-sticky-height="40" data-sticky-top="29" src="~/assets/porto/img/logo-default.png" style="top: 0px; width: 111px; height: 54px;">
                </a>
            </div>
        </div>
        <div class="header-column">
            <div class="header-row">
                <div class="header-nav header-nav-stripe">
                    <button class="btn header-btn-collapse-nav" data-toggle="collapse" data-target=".header-nav-main">
                        <i class="fa fa-bars"></i>
                    </button>
                    <div class="header-nav-main header-nav-main-square header-nav-main-effect-1 header-nav-main-sub-effect-1 collapse">
                        <nav>
                            <ul class="nav nav-pills" id="mainNav">
                                <li class="active">
                                    <a class="dropdown-toggle" href="~/@Thread.CurrentThread.CurrentCulture.Name">
                                        @Resources.Resources.Home
                                    </a>
                                </li>
                                @{var headerItems = menuItems.Where(m => m.Menu.Code.Trim().Equals("header")); }
                                @if (headerItems != null && count > 0)
                                        {
                                        @GetTreeView(headerItems, null)
                                        }
                                @{Html.RenderPartial("~/Views/Shared/Account.cshtml");}
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@helper GetTreeView(IEnumerable<MenuItem> menuItems, int? parentID)
{
foreach (var item in menuItems.Where(m => m.ParentId.Equals(parentID)))
{

    var submenu = menuItems.Where(s => s.ParentId.Equals(item.Id)).Count();
    if (item.IsParent)
    {
        if (submenu > 0 && item.MenuItem1 == null)
        {
                <li class="dropdown">
                    <a class="dropdown-toggle" href="@item.Path">@item.Name</a>
                    @if (submenu > 0)
                    {
                        <ul class="dropdown-menu">
                            @* Recursive  Call for Populate Sub items here*@
                            @GetTreeView(menuItems, item.Id)
                        </ul>
                    }
                </li>

            }
            else
            {
                <li class="dropdown-submenu">
                    <a href="@item.Path">@item.Name</a>

                    @if (submenu > 0)
                    {
                        <ul class="dropdown-menu">
                            @* Recursive  Call for Populate Sub items here*@
                            @GetTreeView(menuItems, item.Id)
                        </ul>
                    }
                </li>
        }
    }
    else
    {
            <li>
                <a href=@item.Path>@item.Name</a>
            </li>

    }
}
}