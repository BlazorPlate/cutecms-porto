@using cutecms_porto.Areas.CMS.Models.DBModel
@using System.Globalization
@using System.Threading
@{
    int count = 0;
    CMSEntities db = new CMSEntities();
    IEnumerable<MenuItem> menuItems = db.MenuItems.Include("Status").Include("Menu").Include("Language").Where(m => m.Menu.TenantId.Trim().Equals(Tenant.TenantId) && m.Menu.Code.Trim().Equals("header") && m.Visible && m.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name));
    count = menuItems.Count();
}

@if (menuItems != null && count > 0)
{
    @GetTreeView(menuItems, null)
}
@helper GetTreeView(IEnumerable<MenuItem> menuItems, int? parentID)
{
foreach (var item in menuItems.Where(m => m.ParentId.Equals(parentID)).OrderBy(m => m.Ordinal))
{

    var submenu = menuItems.Where(s => s.ParentId.Equals(item.Id)).Count();
    if (item.IsParent)
    {
        if (submenu > 0 && item.MenuItem1 == null)
        {
                <li class="dropdown">
                    <a class="dropdown-toggle" href="@item.Path">@item.Name</a>
                    @if (submenu > 0)
                    {
                        <ul class="dropdown-menu">
                            @* Recursive  Call for Populate Sub items here*@
                            @GetTreeView(menuItems, item.Id)
                        </ul>
                    }
                </li>

            }
            else
            {
                <li class="dropdown-submenu">
                    <a href="@item.Path">@item.Name</a>

                    @if (submenu > 0)
                    {
                        <ul class="dropdown-menu">
                            @* Recursive  Call for Populate Sub items here*@
                            @GetTreeView(menuItems, item.Id)
                        </ul>
                    }
                </li>
        }
    }
    else
    {
            <li>
                <a href=@item.Path>@item.Name</a>
            </li>

    }
}
}