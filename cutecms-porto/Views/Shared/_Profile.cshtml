@using cutecms_porto.Areas.Identity.Models.DBModel
@using Microsoft.AspNet.Identity;
@using System.Threading
@using System.Reflection;
@using cutecms_porto.Areas.Identity.Models;
@{
    IdentityEntities db = new IdentityEntities();
    Employee employee = (Employee)ViewBag.Employee;
    ApplicationDbContext _db = new ApplicationDbContext();
    var empEmail = _db.Users.Find(employee.LoginId).Email;
}
<div class="col-lg-3 col-md-3 col-sm-4 col-lg-pull-9 col-md-pull-9 col-sm-pull-8">
    <div class="thumbnail text-center">
        @if (employee != null)
        {
            <img class="img-responsive" alt="" src="@(!File.Exists(Server.MapPath(employee.PersonalPhotoPath)) ? "/assets/admin/plugins/images/users/user-icon.png" : employee.PersonalPhotoPath)">
            string personalTitle = (employee.PersonalTitle.PersonalTitleTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault() != null) ? employee.PersonalTitle.PersonalTitleTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault().Value : employee.PersonalTitle.Code;
            <h4>@personalTitle @employee.FullName</h4>
            foreach (var item in employee.EmpInDepts)
            {
                string occupation = item.Occupation.OccupationTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? item.Occupation.Code;
                string department = item.Department.DepartmentTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? item.Department.Code;
                <h5 class="text-muted">@occupation</h5>
                <h6 class="text-muted">@department</h6>
                <hr />
            }
            if (employee.Publications.Count() != 0)
            {
                var percentage = ProfileCompletion(employee);
             <!-- completed -->
                <div>
                    <label>@percentage% @Resources.Resources.CompletedProfile</label>
                    <div class="progress">
                        @if (percentage <= 50)
                        {
                            <div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%; min-width: 2em;"></div>
                        }
                        @if (percentage > 50 && percentage < 75)
                        {
                            <div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%; min-width: 2em;"></div>
                        }
                        @if (percentage >= 75)
                        {
                            <div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%; min-width: 2em;"></div>
                        }
                    </div>
                </div>
    <!-- /completed -->
            }
        }
    </div>
    @if (employee != null)
    {
            <!-- info -->
        <div class="text-muted">
            <h5><b>@Resources.Resources.About @employee.FullName,</b></h5>
            <p class="justify">@employee.Biography.StripHtml().Chop(190)</p>
            <ul class="list-unstyled nomargin">
                <li><i class="fa fa-2x fa-envelope-square width-20 hidden-xs hidden-sm"></i> <a href="@empEmail">@empEmail</a></li>
                @if (!string.IsNullOrEmpty(employee.FacebookUrl))
                {
                    <li><i class="fa fa-2x fa-facebook-square width-20 hidden-xs hidden-sm"></i> <a href="@employee.FacebookUrl">@Resources.Resources.ViewMySocialNetwork</a></li>
                }
                @if (!string.IsNullOrEmpty(employee.TwitterUrl))
                {
                    <li><i class="fa fa-2x fa-twitter-square width-20 hidden-xs hidden-sm"></i> <a href="@employee.TwitterUrl">@Resources.Resources.ViewMySocialNetwork</a></li>
                }
                @if (!string.IsNullOrEmpty(employee.LinkedInUrl))
                {
                    <li><i class="fa fa-2x fa-linkedin-square width-20 hidden-xs hidden-sm"></i> <a href="@employee.LinkedInUrl">@Resources.Resources.ViewMySocialNetwork</li>
                }
                @if (!string.IsNullOrEmpty(employee.GooglePlusUrl))
                {
                    <li><i class="fa fa-2x  fa-google-plus-square width-20 hidden-xs hidden-sm"></i> <a href="@employee.GooglePlusUrl">@Resources.Resources.ViewMySocialNetwork</a></li>
                }
            </ul>
        </div>
    }
</div>

@functions{
    public int ProfileCompletion(Employee emp)
    {
        var percentage = 100;
        List<string> values = new List<string>();
        var properties = emp.GetType().GetProperties().Where(p => !p.GetGetMethod().IsVirtual && p.Name != "Id" && p.Name != "LoginId" && p.Name != "Image" && p.Name != "File" && p.Name != "Mobile" && p.Name != "MiddleName" && p.Name != "FacebookUrl" && p.Name != "TwitterUrl" && p.Name != "YouTubeUrl" && p.Name != "GooglePlusUrl" && p.Name != "LinkedInUrl" && p.Name != "Ordinal");
        foreach (PropertyInfo propInfo in properties)
        {
            if (propInfo.GetValue(emp, null) == null)
            {
                values.Add("NULL");
            }
            else
            {
                values.Add(propInfo.GetValue(emp, null).ToString());
            }
        }
        var nullValues = values.Where(nv => nv.Contains("NULL")).Count();
        var realValues = values.Where(rv => !rv.Contains("NULL")).Count();
        var allValues = values.Count();
        percentage = (realValues * 100) / allValues;
        return percentage;
    }
}