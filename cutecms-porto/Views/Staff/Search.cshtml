@model IEnumerable<Employee>
@using cutecms_porto.Areas.Identity.Models.DBModel;
@using System.Threading
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = Resources.Resources.SearchResult;
    IdentityEntities db = new IdentityEntities();
}
@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </section>
}
<section>
    <div class="container">
        @if (Model != null)
        {
            <div class="row">
                <ul class="team-list sort-destination">
                    @foreach (var item in Model)
                    {
                        var empInDepts = db.EmpInDepts.Where(p => p.EmpId == item.TranslationId);
                        string personalTitle = item.PersonalTitle.PersonalTitleTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? item.PersonalTitle.Code;
                        <li class="col-md-3 col-sm-6 isotope-item">
                            <span class="thumb-info thumb-info-hide-wrapper-bg mb-xlg">
                                <span class="thumb-info-wrapper">
                                    <a href="@Url.Action("MemberProfile", new { id = item.Id })">
                                        <img alt="@item.PersonalPhotoName" src="@(!File.Exists(Server.MapPath(item.PersonalPhotoPath)) ? "/assets/admin/plugins/images/users/user-icon.png" : item.PersonalPhotoPath)">
                                        <span class="thumb-info-title">
                                            <span class="thumb-info-inner">@personalTitle @item.FullName</span>
                                            @foreach (var empInDept1 in empInDepts)
                                            {
                                                string occupation = empInDept1.Occupation.OccupationTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? empInDept1.Occupation.Code;
                                                string department = empInDept1.Department.DepartmentTerms.Where(p => p.Language.CultureName.Trim().Equals(Thread.CurrentThread.CurrentCulture.Name)).FirstOrDefault()?.Value ?? empInDept1.Department.Code;
                                                <span class="thumb-info-type">@occupation &#64; @department</span>
                                            }
                                        </span>
                                    </a>
                                </span>
                                <span class="thumb-info-caption">
                                    <span class="thumb-info-caption-text text-justify">
                                        @Html.Raw(item.Biography.StripHtml().Chop(100))
                                        <a class="btn btn-xs" href="@Url.Action("MemberProfile", new { id = item.Id })">@Resources.Resources.ReadMore</a>
                                    </span>
                                    <span class="thumb-info-social-icons center">
                                        @if (!string.IsNullOrEmpty(item.FacebookUrl))
                                        {
                                            <a target="_blank" href="@item.FacebookUrl"><i class="fa fa-facebook"></i><span>Facebook</span></a>
                                        }

                                        @if (!string.IsNullOrEmpty(item.TwitterUrl))
                                        {
                                            <a target="_blank" href="@item.TwitterUrl"><i class="fa fa-twitter"></i><span>Twitter</span></a>
                                        }
                                        @if (!string.IsNullOrEmpty(@item.LinkedInUrl))
                                        {
                                            <a target="_blank" href="@item.LinkedInUrl"><i class="fa fa-linkedin"></i><span>Linkedin</span></a>
                                        }
                                        @if (!string.IsNullOrEmpty(@item.GooglePlusUrl))
                                        {
                                            <a target="_blank" href="@item.GooglePlusUrl"><i class="fa fa-google-plus"></i><span>Google Plus</span></a>
                                        }
                                        @if (!string.IsNullOrEmpty(@item.YouTubeUrl))
                                        {
                                            <a target="_blank" href="@item.YouTubeUrl"><i class="fa fa-youtube"></i><span>YouTube</span></a>
                                        }
                                    </span>
                                </span>
                            </span>
                        </li>
                    }
                </ul>

            </div>
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Result", new { page, empName = ViewBag.EmpName, empTypeId = ViewBag.EmpTypeId }))
        }
        else
        {
            <div class="text-center">
                <p class="text-danger">@Resources.Resources.NoResult</p>
                <br />
                <p><a class="text-blue" href="~/@Thread.CurrentThread.CurrentCulture.Name"><i class="glyphicon glyphicon-menu-left margin-right-10 size-16"></i>@Resources.Resources.BackToHome</a></p>
            </div>
        }
    </div>
</section>