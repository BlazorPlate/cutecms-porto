@model IEnumerable<cutecms_porto.Areas.RMS.Models.DBModel.Vacancy>
@using cutecms_porto.Areas.RMS.Models.DBModel
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = Resources.Resources.JobAnnouncements;
    RMSEntities db = new RMSEntities();
}
@section PageHeader
{
    <section class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1>@ViewBag.Title</h1>
                </div>
            </div>
        </div>
    </section>
}
<section>
    <div class="container">
        @using (Html.BeginForm("Index", "Vacancies", FormMethod.Post))
        {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.Label(Resources.Resources.Search)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.TextBox("keywordFilter", ViewBag.KeywordFilter as string, new { @class = "form-control", @placeholder = Resources.Resources.Keywords })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.DropDownList("jobTypeIdFilter", new SelectList(ViewBag.JobTypeIdFilter, "Value", "Text"), Resources.Resources.ChooseJobType, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.DropDownList("statusIdFilter", new SelectList(ViewBag.StatusIdFilter, "Value", "Text"), Resources.Resources.ChooseStatus, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" value="@Resources.Resources.Search" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
        <section>
            @if (Model.Count() != 0)
            {
                foreach (var item in Model)
                {
                    <div class="heading-title heading-border-bottom heading-color">
                        <h2 class="size-20 margin-top-1">@item.Title.ToUpperInvariant()</h2>
                        <br />
                        <small>@item.Code.ToUpperInvariant()</small>
                        <span class="pull-right text-muted">@item.Available @Resources.Resources.Available</span>
                    </div>
                    <div class="margin-bottom-20">
                        <p>@Html.Raw(HttpUtility.HtmlDecode(item.Description.StripHtml()))</p>

                        @if (item.ExpiredOn != null)
                        {
                            <h5>@Resources.Resources.ExpiredOn.ToUpperInvariant()</h5>
                            <p>@item.ExpiredOn</p>
                        }
                        <a href="@Url.Action("Details", "Vacancies", new { id = item.Id })" class="btn btn-3d btn-teal"><i class="fa fa-check"></i>@Resources.Resources.Apply</a>
                        <hr />
                    </div>
                }
            }
            else
            {
                <p>@Resources.Resources.NoResult</p>
            }
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Contents", new { page, keywordFilter = ViewBag.KeywordFilter, contentTypeIdFilter = ViewBag.ContentTypeId, statusIdFilter = ViewBag.StatusId }))
        </section>
    </div>
</section>
